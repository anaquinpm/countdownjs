{"version":3,"sources":["js/index.js"],"names":["window","$","document","querySelector","bind","addEventListener","timeDom","trunc","x","Math","diffDate","sustMillis","s","positiveNumber","timer","milliseconds","intTime","dayMill","eventDay","Date","setTime","getTime","secMill","now","remainingTime","indexSeg","length","idInterval","setInterval","countDown","sustNextDigit","index","gratherIndex","findIndex","clearInterval","forEach","digit","i","innerHTML"],"mappings":";AAAAA,OAAOC,EAAIC,SAASC,cAAcC,KAAKF,UAEvCA,SAASG,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAU,CAACL,EAAE,cAAeA,EAAE,eAAgBA,EAAE,cAAeA,EAAE,eAEjEM,EAAQ,SAACC,GAAMC,OAAAA,KAAKF,MAAMG,EAAWF,IACrCG,EAAa,SAACC,GAAQF,GAAsBE,GAC5CC,EAAiB,SAACL,GAAMA,OAAAA,EAAI,GAEzBM,SAAAA,EAAMC,GACTC,IAAAA,EAAUT,EAAMQ,GAEbC,OADPL,EAAWI,GACJC,EAuBHC,IAMAC,EAAW,IAAIC,KACrBD,EAASE,QAAQF,EAASG,UAAYJ,QAAeK,KAI/CC,IACFb,EAAWQ,EADH,IAAIC,KAEZK,EAAgB,CAACV,EAbL,OAaqBA,EAZpB,MAYqCA,EAXtC,KAWsDA,EAVtD,MAWVW,EAAWD,EAAcE,OAAS,EAElCC,EAAaC,YAvBVC,WACNL,EAAcC,GAAY,EAAKD,EAAcC,IAAa,EAdpDK,SAAcC,GAEjBC,IAAiB,GADFR,EAAcS,UAAUpB,GACnB,CACjBkB,IAAAA,GAAS,EAA4B,IAAzBP,EAAcO,GAAcA,IAC7BP,EAAcO,GAAnB,IAARA,EAAoC,GAA4B,GAEnEP,EAAcO,IAAU,EACxBP,EAAcC,GAAY,QAE1BS,cAAcP,GAK+CG,CAAcL,GAC7EnB,EAAQ6B,QAAQ,SAACC,EAAOC,GACrBb,OAAAA,EAAca,GAAK,EAAKD,EAAME,UAAYd,EAAca,GAAKD,EAAME,UAAY,IAAMd,EAAca,MAoB9D","file":"js.5e8ee7c8.js","sourceRoot":"../src","sourcesContent":["window.$ = document.querySelector.bind(document);\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const timeDom = [$('.main__day'), $('.main__hour'), $('.main__min'), $('.main__sec')];\n\n  const trunc = (x) => Math.trunc(diffDate / x);\n  const sustMillis = (s) => { diffDate = diffDate % s };\n  const positiveNumber = (x) => x > 0;\n\n  function timer(milliseconds) {\n    let intTime = trunc(milliseconds);\n    sustMillis(milliseconds);\n    return intTime;\n  }\n\n  function sustNextDigit(index) {\n    let gratherIndex = remainingTime.findIndex(positiveNumber);\n    if (gratherIndex != -1) {\n      for (index -= 1; remainingTime[index] === 0; index--) {\n        (index===1) ? remainingTime[index] = 23 : remainingTime[index] = 59;\n      }\n      remainingTime[index] -= 1;\n      remainingTime[indexSeg] = 59;\n    } else {\n      clearInterval(idInterval);\n    }\n  }\n\n  function countDown() {\n    (remainingTime[indexSeg] > 0) ? remainingTime[indexSeg] -= 1 : sustNextDigit(indexSeg);\n    timeDom.forEach((digit, i) =>\n      (remainingTime[i] > 9) ? digit.innerHTML = remainingTime[i] : digit.innerHTML = '0' + remainingTime[i]);\n  }\n\n  // Parameters in milliseconds\n  const dayMill = 8.64e7;\n  const hourMill = 3.6e6;\n  const minMill = 6e4;\n  const secMill = 1000;\n\n  // * Set Coundown\n  const eventDay = new Date();\n  eventDay.setTime(eventDay.getTime() + dayMill * 14 + secMill * 3)  // 14d:0h:0m:3s\n  // eventDay.setTime(eventDay.getTime() + hourMill + secMill * 3)    // 1h:0m:3s\n  // eventDay.setTime(eventDay.getTime() + secMill * 3)            // 3seg\n\n  const now = new Date();\n  let diffDate = eventDay - now;\n  let remainingTime = [timer(dayMill), timer(hourMill), timer(minMill), timer(secMill)]\n  const indexSeg = remainingTime.length - 1;\n\n  const idInterval = setInterval(countDown, 1000);\n})"]}